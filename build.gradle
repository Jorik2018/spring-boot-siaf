plugins {
	id 'org.springframework.boot' version '2.5.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'gob.regionancash.siaf'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'


repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	flatDir {
       	dirs 'E:/projects/java/ib-ole/dist/'
       	dirs 'E:/projects/java/javadbf/dist/'
   	}
}
sourceSets { 
   main { 
      resources { 
         srcDir 'E:/projects/spring/zk_web/libs'  
      } 
   }   
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation name: 'ib-ole'
	implementation name: 'javadbf'
	implementation files('E:/projects/spring/zk_web/libs/jacob.jar')
	/*compile files("E:/projects/spring/zk_web")*/
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation 'mysql:mysql-connector-java'
	// https://mvnrepository.com/artifact/com.github.albfernandez/javadbf
	//implementation group: 'com.github.albfernandez', name: 'javadbf', version: '1.11.2'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-csv
	implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.8'
	//https://mvnrepository.com/artifact/org.jamel.dbf/dbf-reader
	implementation group: 'org.jamel.dbf', name: 'dbf-reader', version: '0.3.0'
}
jar {
    manifest {
        attributes "Main-Class": "gob.regionancash.siaf.SiafWebApplicationn"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
test {
	useJUnitPlatform()
}
